#!/usr/bin/env python
import os

import click

BASEDIRS = ['tests', 'src']
BASEFILES = ['requirements.txt', 'README.md', 'tox.ini', 'src/api.py', 'CODEOWNERS']


@click.group()
def falcon():
    pass


def touch(filename):
    with open(filename, 'w') as fd:
        initial_string = '# This file was autogenerated by falcon.'
        fd.write(initial_string)


@falcon.command()
@click.argument('name')
@click.option('--dockerfile', '-D', is_flag=True, help='Create empty Dockerfile')
@click.option('--models', '-M', is_flag=True, help='Create empty models.py file')
@click.option('--resources', '-R', is_flag=True, help='Create empty resources.py file')
def create(name, dockerfile, models, resources):
    os.makedirs(name)
    os.chdir(name)

    for dir in BASEDIRS:
        os.makedirs(dir)

    for file in BASEFILES:
        touch(file)

    if dockerfile:
        touch('Dockerfile')

    if models:
        touch('src/models.py')

    if resources:
        touch('src/resources.py')


if __name__ == '__main__':
    falcon()
